
Group "CALCULATION_START_CONTROL" {
   ! Start new calculation or restart a previous one <-----------------
   RestartCalculations ? No;

   ! Start from CalcID
   StartFromCalcId = 'test_rs_s1';
   ! Start from Step ( -1 for start from the last step )
   StartFromStep   = -1;
}


Group "OUTPUT_CONTROL" {
   ! Identificator of calculation <------------------------------
   CalcId = 'test_rs_s1';  

   ! -> zero or negative output intervals means no output <--
   ! Number Of Timesteps after which timelabel is printed to cout
   TimeStepStdoutPrintInterval  = 10;
   ! Number Of Timesteps after which timelabel is printed to logfile
   TimeStepLogFilePrintInterval = 50;
   ! Number Of Timesteps after which results are saved into HDF files
   TimeStepHDFFileSaveInterval  = 50;
}

	

Group "CODE_CONTROL" {
   
   ! all optional <<<<<<<<<

   ! Electrodynamics -------------
   DoGatherRhoAndJ ? Yes;
   DoMaxwell       ? Yes;

   ! Particles -------------------
   DoMoveParticles ? Yes;

   ! Monte Carlo -----------------
   DoMonteCarlo    ? Yes;

   ! LPT -------------------------
   DoLPT           ? Yes;
}     



Group "DIMENSIONAL_CONSTANTS" {
   InitializerType='PSR_ConstsInitializer';

   Group "PSR_ConstsInitializer" {
      ! Magnetic field at the pole  [10^12 G]
      B_12 = -1;
      ! Period of pulsar [seconds]
      P_SEC = 0.2;
      ! Radius of curvature of magnetic field lines [ 10^6 cm]
      Rcur_6 = 1;

      ! Inclination angle
      CHI = 0;
      ! NS radius [10^6 cm]
      RNS_6 = 1;
   }
}

Group "GEOMETRY" {
   !  Width of the gap in GJ dipole Rpc=Rns^3/2 * (\Omega/c)^1/2
   WIDTH  = 1;
   !  Lenghth of the gap in GJ dipole Rpc=Rns^3/2 * (\Omega/c)^1/2
   LENGTH = 0.3;
   ! Colatitude of the field line [ in units of \thepa_pc ]
   THETA = 1;
}


Group "GRID" {
   ! Number of Cells
   NumberOfCells = 1000;
}


Group "TIME" {
   !  Timestep
   dT =  1e-4;
   !  Number of timesteps
   NumberOfTimeSteps = 30000;   
}

Group "RHO_GJ" {
   Type = 'RhoGJFunctor_Const';
}

Group "MAGNETIC_FIELD" {
   Type = 'R6';
}

Group "ELECTRODYNAMICS" {
   Type = 'Electrostatic_1D';

   Group "Electrostatic_1D" {

      ApplyDigitalFilter ? Yes;

      Group "Electrostatic_1D_J" {
         Type = 'Constant';
         J0 = 1.0;
      }
      Group "BoundaryConditions_Phi" {
         Type = 'RS_1';
      }
      Group "BoundaryConditions_E" {
         Type = 'LooseEnds';
         E_Damping_Coeff = 0;
      }
   }
}
	


Group "PARTICLES" {

   ! these parameters are read at RESTART <<<<<<<<
   ! Number of particles to provide \rho_{GJ}
   NGJ = 5000;

   NumberOfChargedParticleTypes = 2;
   ChargedParticles_#0 = 'Electrons';
   ChargedParticles_#1 = 'Positrons';
   
   Group "BoundaryConditions" {  
      Type = 'RS_1';
   }     
   !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
   
   ! --------------------------------------------------------
   Group "Electrons" {
      Mass   = 1;
      Charge = -1;
      ! Initial number of particles
      NumberOfParticles_Initial = 1;
      ! these parameters are read at RESTART<<<<<<
      Group "LPT" {
         ! Required parameters
         DoSplitting ? Yes;
         DoMerging   ? Yes;
         ! Optional parameters - required only if splitting/merging is requested
         NumberOfParticles_Max = 350000;
         NumberOfParticles_Min = 10000;
         merge_f_reduce       = 0.5;   ! probability of particle merge
         split_min_weight     = 1;     ! min weight  of splitted particle
         split_f_dx           = 0.1;   ! fraction of cellsize 
         split_f_splitted_min = 0.5;   ! minimum fraction of splitted particles
         split_n_steps_min    = 100;   ! minimum # of time steps between splitting
      }
      !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Group "InitialConditions" {        
         NumberOfInitializedAttributes = 2;
         AttributeName_#0 = 'X';
         AttributeName_#1 = 'P_par';     
         Group "X" {
            DistributionName='SingleValue';
            Group "SingleValue" {
               Value=0.5*NParam[GEOMETRY](LENGTH);           
            }   
         }
         Group "P_par" {
            DistributionName='SingleValue';
            Group "SingleValue" {
               Value = 0;
            }
         }
      }
   }
   ! --------------------------------------------------------

   ! --------------------------------------------------------
   Group "Positrons" {
      Mass   = 1;
      Charge = 1;
      ! Initial number of particles
      NumberOfParticles_Initial = 1;
      ! these parameters are read at RESTART<<<<<<
      Group "LPT" {
         ! Required parameters
         DoSplitting ? Yes;
         DoMerging   ? Yes;
         ! Optional parameters - required only if splitting/merging is requested
         NumberOfParticles_Max = 350000;
         NumberOfParticles_Min = 10000;
         merge_f_reduce       = 0.5;   ! probability of particle merge
         split_min_weight     = 1;     ! min weight  of splitted particle
         split_f_dx           = 0.1;   ! fraction of cellsize 
         split_f_splitted_min = 0.5;   ! minimum fraction of splitted particles
         split_n_steps_min    = 100;   ! minimum # of time steps between splitting
      }
      !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Group "InitialConditions" {        
         NumberOfInitializedAttributes = 2;
         AttributeName_#0 = 'X';
         AttributeName_#1 = 'P_par';     
         Group "X" {
            DistributionName='SingleValue';
            Group "SingleValue" {
               Value=0.5*NParam[GEOMETRY](LENGTH);           
            }   
         }
         Group "P_par" {
            DistributionName='SingleValue';
            Group "SingleValue" {
               Value = 0;
            }
         }
      }
   }
   ! --------------------------------------------------------
}



Group "PAIRS" {
   NumberOfParticles_Initial = 0;
   ! these parameters are read at RESTART<<<<<<
   Group "LPT" {
      ! Required parameters
      DoSplitting ? No;
      DoMerging   ? No;
   }
   !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}


Group "PIC" {
   Group "BoundaryConditions" {
         Type = 'FreeFlowBothEnds';
      }
}

Group "LPT" {
   ! using for tests: fix the seed of RNG
   SetSeedForRandomNumberGenerator ? No;
   ! the seed for RNG
   Seed = 1234;
}


Group "MONTE_CARLO" {

   PhotonCacheSize   = 150;

   PairCacheSize     = 10000;
   ElectronCacheSize = 10000;
   PositronCacheSize = 10000;

   ! On the spot pair creation (if not set - false)
   DoOnTheSpotPairCreation  ? No;

   ! Pair creation smoothing   (if not set - false)
   ! smooth pair injection over several cells?
   DoPairInjectionSmoothing ? Yes;
   ! -------------------------------------
   NSmoothCells = 50;
   ! using for tests: fix the seed of RNG
   SetSeedForRandomNumberGenerator ? No;
   ! the seed for RNG
   Seed = 1234;
   ! -------------------------------------
	   

   Group "CR" {
      ! The lowest energy of particles emitting curvature photons (E^{min}_e)
      E_particle_min = 5e5;      
      ! The lowest energy of emitted CR photon ( \epsilon_{min} )
      E_photons_min = 20;      

      ! maximum number of single photon emission attempts
      N_single_emission_max = 50;

      ! Discrete CR emission: number of points in table of Gcr
      N_Gcr_table_points    = 360;
      ! Discrete CR emission: number of cutpoints in table of Gcr
      N_Gcr_table_cutpoints = 120;

      ! Continuous CR emission: spectrum intervals (eta_min,eta_max) 
      Interval "Eta" {
	 Points = 1e-7,10;
	 Number_of_subintervals = 80;
	 Division_method = Log;
      }

      ! using for tests: fix the seed of RNG
      SetSeedForRandomNumberGenerator ? No;
      ! the seed for RNG
      Seed = 1234;
   }


   Group "Gamma2Pair" {
      ! smallest step in optical depth claculation	 
      dX_Tau =  2.5e-3;

      ! smallest upper boundary for tau when photon propagation will
      ! be considered
      TAU_MIN = 1e-4;
      ! admitted relative error in optical depth claculation
      EPS_TAU = 1e-3;

      ! number of Large steps
      N_LS = 20;
      ! estimated number of cross-section evaluation in Large Steps method
      LS_N_SIGMA_EVAL = 40;

      ! using for tests: fix the seed of RNG
      SetSeedForRandomNumberGenerator ? No;
      ! the seed for RNG
      Seed = 1234;
   }

}

Group "NS_PARTICLE_FLUX" {
   ! results will be saved in this file   
   OutputFilename = 'ns_particle_flux.h5';
   ! size of the deque array
   Size = 100;
}

Group "LC_PARTICLE_FLUX" {
   ! results will be saved in this file   
   OutputFilename = 'lc_particle_flux.h5';
   ! size of the deque array
   Size = 100;
}


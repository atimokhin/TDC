;; Object _MC/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "_MC/"
  :tables (list 
   (semanticdb-table "monte_carlo.h"
    :major-mode 'c++-mode
    :tags '(("MONTE_CARLO_H" variable (:constant-flag t) nil [23 47]) ("iostream" include (:system-flag t) nil [46 65]) ("ATbase.h" include nil nil [67 86]) ("../inout/save2hdf.h" include nil nil [88 118]) ("../PhysicsLib/small_functions.h" include nil nil [120 162]) ("../SetupParameters/test_cascade_params.h" include nil nil [164 215]) ("../_Particles/particle_list.h" include nil nil [217 257]) ("../_Particles/charged_patch.h" include nil nil [258 298]) ("../_Particles/pairs_patch.h" include nil nil [299 337]) ("../_Particles/ID/particle_id.h" include nil nil [338 379]) ("Photons/photons.h" include nil nil [381 409]) ("Emission/CR.h" include nil nil [410 434]) ("PairProduction/gamma2pair.h" include nil nil [435 473]) ("MonteCarlo" type (:members (("public" label nil (reparse-symbol classsubparts) [739 746]) ("MonteCarlo" function (:constructor-flag t :type ("MonteCarlo" type "class")) (reparse-symbol classsubparts) [768 783]) ("Particles2Pairs" function (:prototype-flag t :arguments (("" variable (:type ("ParticleList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [937 960]) ("" variable (:type ("plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [962 968]) ("pairs" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [969 982]) ("t" variable (:type "double") (reparse-symbol arg-sub-list) [987 996]) ("dt" variable (:type "double") (reparse-symbol arg-sub-list) [997 1007]) ("id" variable (:type ("ParticleID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1008 1024])) :type ("bool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [915 1025]) ("Pairs2Particles" function (:prototype-flag t :arguments (("pairs" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1192 1205]) ("" variable (:type ("ParticleList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1206 1229]) ("" variable (:type ("plist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1231 1237]) ("t" variable (:type "double") (reparse-symbol arg-sub-list) [1238 1247]) ("dt" variable (:type "double") (reparse-symbol arg-sub-list) [1248 1258])) :type ("bool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1171 1259]) ("SetupFromConfig" function (:prototype-flag t :arguments (("in" variable (:type ("FileInput" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1313 1327])) :type "void") (reparse-symbol classsubparts) [1292 1328]) ("SingleParticleEmission" function (:prototype-flag t :arguments (("dt" variable (:type "double") (reparse-symbol arg-sub-list) [1449 1459]) ("i" variable (:type "int") (reparse-symbol arg-sub-list) [1460 1466]) ("p" variable (:type ("Particles" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1467 1480])) :type ("bool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1421 1481]) ("CreatePairs" function (:prototype-flag t :arguments (("pairs" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1567 1580]) ("id" variable (:type ("ParticleID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1581 1596])) :type ("bool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1550 1597]) ("SetPhotons" function (:arguments (("ph" variable (:type ("Photons" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1656 1668])) :type "void") (reparse-symbol classsubparts) [1640 1682]) ("private" label nil (reparse-symbol classsubparts) [1685 1693]) ("_Ph" variable (:type ("Photons" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1758 1770]) ("_G2P" variable (:type "int") (reparse-symbol classsubparts) [1842 1847]) ("_CR" variable (:type "int") (reparse-symbol classsubparts) [1928 1932])) :type "class") nil [720 1943]) ("SetupFromConfig" function (:arguments (("in" variable (:type ("FileInput" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2003 2017])) :type "int") nil [1987 2728]) ("Particles2Pairs" function (:arguments (("" variable (:type ("ParticleList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3696 3719]) ("" variable (:type ("pl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3721 3724]) ("pairs" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3735 3748]) ("t" variable (:type "double") (reparse-symbol arg-sub-list) [3759 3768]) ("dt" variable (:type "double") (reparse-symbol arg-sub-list) [3769 3779]) ("id" variable (:type ("ParticleID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3789 3804])) :type "int") nil [3680 4676]) ("Pairs2Particles" function (:arguments (("pairs_global" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5641 5661]) ("" variable (:type ("ParticleList" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5672 5695]) ("" variable (:type ("pl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5697 5700]) ("t" variable (:type "double") (reparse-symbol arg-sub-list) [5711 5720]) ("dt" variable (:type "double") (reparse-symbol arg-sub-list) [5721 5731])) :type "int") nil [5625 6983]) ("SingleParticleEmission" function (:arguments (("dt" variable (:type "double") (reparse-symbol arg-sub-list) [7306 7316]) ("i" variable (:type "int") (reparse-symbol arg-sub-list) [7317 7323]) ("p" variable (:type ("Particles" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7324 7337])) :type "int") nil [7283 7381]) ("CreatePairs" function (:arguments (("pairs" variable (:type ("Pairs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7779 7792]) ("id" variable (:type ("ParticleID" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7793 7808])) :type "int") nil [7767 9079]))
    :file "monte_carlo.h"
    :pointmax 9088
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )

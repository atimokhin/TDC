! modified 01/28/2011
!
! test single particle acceleration by the constant electric field
!
! try to test quadratic convergence with dT
!

Group "CALCULATION_START_CONTROL" {
   ! Start new calculation or restart a previous one <-----------------
   RestartCalculations ? No;

   ! Start from CalcID
   StartFromCalcId = 'test_single_particle_acceleration';
   ! Start from Step ( -1 for start from the last step )
   StartFromStep   = -1;
}


Group "OUTPUT_CONTROL" { 
   ! Identificator of calculation <------------------------------
   CalcId = 'test_single_particle_acceleration';  

   ! -> zero or negative output intervals means no output <--
   ! Number Of Timesteps after which timelabel is printed to cout
   TimeStepStdoutPrintInterval  = 100;
   ! Number Of Timesteps after which timelabel is printed to logfile
   TimeStepLogFilePrintInterval = 100;
   ! Number Of Timesteps after which results are saved into HDF files
   TimeStepHDFFileSaveInterval  = 100;
}


Group "CODE_CONTROL" {
   
   ! all optional <<<<<<<<<

   ! Electrodynamics -------------
   DoGatherRhoAndJ ? No;
   DoMaxwell       ? Yes;

   ! Enforce Gauss Law -----------
   DoEnforceGaussLaw ? No;
   NSteps_EnforceGaussLaw = 50;

   ! Particles -------------------
   DoMoveParticles ? Yes;

   ! Monte Carlo -----------------
   DoMonteCarlo    ? No;

   ! LPT -------------------------
   DoLPT           ? No;
}     

Group "DIMENSIONAL_CONSTANTS" {
   InitializerType='PcfX0_ConstsInitializer';

   Group "PcfX0_ConstsInitializer" {
      ! Pcf -- characteristic Lorentz factor of electrons 
      Pcf = 50;
      ! X0  -- characteristic domain length
      X0 = 1e4;

      ! Magnetic field at the pole  [10^12 G]
      B_12 = 0;
      ! Radius of curvature of magnetic field lines [ 10^6 cm]
      Rcur_6 = 1;
   }
}



Group "GEOMETRY" {
   !  Width of the gap in GJ dipole Rpc=Rns^3/2 * (\Omega/c)^1/2
   WIDTH  = 1;
   !  Lenghth of the gap in GJ dipole Rpc=Rns^3/2 * (\Omega/c)^1/2
   LENGTH = 1;
   ! Colatitude of the field line [ in units of \thepa_pc ]
   THETA = 1;
}


Group "GRID" {
   ! Number of Cells
   NumberOfCells = 1000;
}


Group "TIME" {
   !  Timestep
   dT =  4e-5;
   !  Number of timesteps
   NumberOfTimeSteps = 25000;   
}

Group "RHO_GJ" {
   Type = 'RhoGJFunctor_Const';
}

Group "MAGNETIC_FIELD" {
   Type = 'R6';
}
	
Group "ELECTRODYNAMICS" {
   Type = 'Electrostatic_1D';

   Group "Electrostatic_1D" {

      ApplyDigitalFilter ? Yes;

      Group "Electrostatic_1D_J" {
         Type = 'Constant';
         ! current density in units of |\rho_{GJ}^0|
         J0 = 0;
      }
      Group "BoundaryConditions_Phi" {	 
	 Type = 'FixedPotentialDrop';
	 dV = 1;
      }	 
      Group "BoundaryConditions_E" {
         Type = 'LooseEnds';
         E_Damping_Coeff = 1;
      }
   } 
}
	


Group "PARTICLES" {

   ! these parameters are read at RESTART <<<<<<<<
   ! Number of particles to provide \rho_{GJ}
   NGJ = 1;

   NumberOfChargedParticleTypes = 1;
   ChargedParticles_#0 = 'Electrons';

   Group "BoundaryConditions" {	 
      Type = 'RS_1';
   }	 
   !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
   

   Group "Electrons" {
      Mass   =  1;
      Charge =  -1;
      ! Initial number of particles
      NumberOfParticles_Initial = 1;
      ! these parameters are read at RESTART<<<<<<
      Group "LPT" {
         ! Required parameters
         DoSplitting ? No;
         DoMerging   ? No;
      }
      !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Group "InitialConditions" {	 
	 NumberOfInitializedAttributes = 2;
	 AttributeName_#0 = 'X';
	 AttributeName_#1 = 'P_par';	 
	 Group "X" {		
	    DistributionName='SingleValue';
	    Group "SingleValue" {		
	       Value=0.1;
	    }   
	 }
        Group "P_par" {
	    DistributionName='SingleValue';
	    Group "SingleValue" {		
	       Value=0.1;
	    }   
         }
      }
   }      
}



Group "PAIRS" {
   NumberOfParticles_Initial = 0;
   ! these parameters are read at RESTART<<<<<<
   Group "LPT" {
      ! Required parameters
      DoSplitting ? No;
      DoMerging   ? No;
   }
   !<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

Group "PIC" {
   Group "BoundaryConditions" {
         Type = 'None';
      }
}



Group "NS_PARTICLE_FLUX" {
   ! results will be saved in this file   
   OutputFilename = 'ns_particle_flux.h5';
   ! size of the deque array
   Size = 3;
}

Group "LC_PARTICLE_FLUX" {
   ! results will be saved in this file   
   OutputFilename = 'lc_particle_flux.h5';
   ! size of the deque array
   Size = 3;
}

